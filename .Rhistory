#install.packages(gridExtra)
#library(gridExtra)
grid.arrange(percentage.plot,row.plot,cols=2)
install.packages("gridExtra")
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
library(dplyr)
library(tidyr)
missing.values <- le %>%
gather(key = "key", value = "val") %>%
mutate(is.missing = is.na(val)) %>%
group_by(key, is.missing) %>%
summarise(num.missing = n()) %>%
filter(is.missing==T) %>%
select(-is.missing) %>%
arrange(desc(num.missing))
missing.values
library(magrittr)
library(dplyr)
library(tidyr)
missing.values <- le %>%
gather(key = "key", value = "val") %>%
mutate(is.missing = is.na(val)) %>%
group_by(key, is.missing) %>%
summarise(num.missing = n()) %>%
filter(is.missing==T) %>%
select(-is.missing) %>%
arrange(desc(num.missing))
missing.values
library(ggplot2)
library(gridExtra)
missing.values <- le %>%
gather(key="key", value="val") %>%
mutate(isna=is.na(val)) %>%
group_by(key) %>%
mutate(total=n()) %>%
group_by(key,total,isna) %>%
summarise(num.isna=n()) %>%
mutate(pct=num.isna/total * 100)
levels <- (missing.values%>%filter(isna==T) %>% arrange(desc(pct)))$key
null_percentage.plot <- missing.values %>% ggplot() +
geom_bar(aes(x = reorder(key, desc(pct)),
y = pct, fill=isna), stat='identity', alpha=0.8) +
scale_x_discrete(limits = levels) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
coord_flip() + labs(title = "Percentage of missing values",
x = 'Features', y = "% of missing values")
null_inrow.plot <- le %>%
mutate(id = row_number()) %>%
gather(-id, key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
ggplot(aes(key, id, fill = isna)) +
geom_raster(alpha=0.8) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
scale_x_discrete(limits = levels) +
labs(x = "Features", y = "Row Number", title = "Missing values in rows") +
coord_flip()
library(dplyr)
#le_dropped <- le %>% filter_at(vars(Population_scaled,Population,GDP,GDP_scaled,Income.composition.of.resources,Schooling),any_vars(!is.na(.)))
le_dropped <- le %>% filter_at(vars(Population,GDP,Income.composition.of.resources,Schooling),any_vars(!is.na(.)))
missing.values <- le_dropped %>%
gather(key="key", value="val") %>%
mutate(isna=is.na(val)) %>%
group_by(key) %>%
mutate(total=n()) %>%
group_by(key,total,isna) %>%
summarise(num.isna=n()) %>%
mutate(pct=num.isna/total * 100)
missing.values
levels <- (missing.values%>%filter(isna==T) %>% arrange(desc(pct)))$key
null_percentage_dropped.plot <- missing.values %>% ggplot() +
geom_bar(aes(x = reorder(key, desc(pct)),
y = pct, fill=isna), stat='identity', alpha=0.8) +
scale_x_discrete(limits = levels) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
coord_flip() + labs(title = "Percentage of missing values after dropping some common null value records",
x = 'Features', y = "% of missing values")
null_inrow_dropped.plot <- le_dropped %>%
mutate(id = row_number()) %>%
gather(-id, key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
ggplot(aes(key, id, fill = isna)) +
geom_raster(alpha=0.8) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
scale_x_discrete(limits = levels) +
labs(x = "Features", y = "Row Number", title = "Missing values in rows after dropping some common null value records") +
coord_flip()
options(repr.plot.width = 30, repr.plot.height = 60)
gridExtra::grid.arrange(null_percentage.plot, null_inrow.plot, ncol = 1)
gridExtra::grid.arrange(null_percentage_dropped.plot, null_inrow_dropped.plot, ncol = 1)
library(ggplot2)
library(gridExtra)
missing.values <- le %>%
gather(key="key", value="val") %>%
mutate(isna=is.na(val)) %>%
group_by(key) %>%
mutate(total=n()) %>%
group_by(key,total,isna) %>%
summarise(num.isna=n()) %>%
mutate(pct=num.isna/total * 100)
levels <- (missing.values%>%filter(isna==T) %>% arrange(desc(pct)))$key
null_percentage.plot <- missing.values %>% ggplot() +
geom_bar(aes(x = reorder(key, desc(pct)),
y = pct, fill=isna), stat='identity', alpha=0.8) +
scale_x_discrete(limits = levels) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
coord_flip() + labs(title = "Percentage of missing values",
x = 'Features', y = "% of missing values")
null_inrow.plot <- le %>%
mutate(id = row_number()) %>%
gather(-id, key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
ggplot(aes(key, id, fill = isna)) +
geom_raster(alpha=0.8) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
scale_x_discrete(limits = levels) +
labs(x = "Features", y = "Row Number", title = "Missing values in rows") +
coord_flip()
library(dplyr)
#le_dropped <- le %>% filter_at(vars(Population_scaled,Population,GDP,GDP_scaled,Income.composition.of.resources,Schooling),any_vars(!is.na(.)))
le_dropped <- le %>% filter_at(vars(Population,GDP,Income.composition.of.resources,Schooling),any_vars(!is.na(.)))
missing.values <- le_dropped %>%
gather(key="key", value="val") %>%
mutate(isna=is.na(val)) %>%
group_by(key) %>%
mutate(total=n()) %>%
group_by(key,total,isna) %>%
summarise(num.isna=n()) %>%
mutate(pct=num.isna/total * 100)
missing.values
levels <- (missing.values%>%filter(isna==T) %>% arrange(desc(pct)))$key
null_percentage_dropped.plot <- missing.values %>% ggplot() +
geom_bar(aes(x = reorder(key, desc(pct)),
y = pct, fill=isna), stat='identity', alpha=0.8) +
scale_x_discrete(limits = levels) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
coord_flip() + labs(title = "Percentage of missing values after dropping some common null value records",
x = 'Features', y = "% of missing values")
null_inrow_dropped.plot <- le_dropped %>%
mutate(id = row_number()) %>%
gather(-id, key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
ggplot(aes(key, id, fill = isna)) +
geom_raster(alpha=0.8) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
scale_x_discrete(limits = levels) +
labs(x = "Features", y = "Row Number", title = "Missing values in rows after dropping some common null value records") +
coord_flip()
options(repr.plot.width = 30, repr.plot.height = 60)
gridExtra::grid.arrange(null_percentage.plot, null_inrow.plot, ncol = 1)
gridExtra::grid.arrange(null_percentage_dropped.plot, null_inrow_dropped.plot, ncol = 1)
library(ggplot2)
library(gridExtra)
missing.values <- le %>%
gather(key="key", value="val") %>%
mutate(isna=is.na(val)) %>%
group_by(key) %>%
mutate(total=n()) %>%
group_by(key,total,isna) %>%
summarise(num.isna=n()) %>%
mutate(pct=num.isna/total * 100)
levels <- (missing.values%>%filter(isna==T) %>% arrange(desc(pct)))$key
null_percentage.plot <- missing.values %>% ggplot() +
geom_bar(aes(x = reorder(key, desc(pct)),
y = pct, fill=isna), stat='identity', alpha=0.8) +
scale_x_discrete(limits = levels) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
coord_flip() + labs(title = "Percentage of missing values",
x = 'Features', y = "% of missing values")
null_inrow.plot <- le %>%
mutate(id = row_number()) %>%
gather(-id, key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
ggplot(aes(key, id, fill = isna)) +
geom_raster(alpha=0.8) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
scale_x_discrete(limits = levels) +
labs(x = "Features", y = "Row Number", title = "Missing values in rows") +
coord_flip()
library(dplyr)
#le_dropped <- le %>% filter_at(vars(Population_scaled,Population,GDP,GDP_scaled,Income.composition.of.resources,Schooling),any_vars(!is.na(.)))
le_dropped <- le %>% filter_at(vars(Population,GDP,Income.composition.of.resources,Schooling),any_vars(!is.na(.)))
missing.values <- le_dropped %>%
gather(key="key", value="val") %>%
mutate(isna=is.na(val)) %>%
group_by(key) %>%
mutate(total=n()) %>%
group_by(key,total,isna) %>%
summarise(num.isna=n()) %>%
mutate(pct=num.isna/total * 100)
missing.values
levels <- (missing.values%>%filter(isna==T) %>% arrange(desc(pct)))$key
null_percentage_dropped.plot <- missing.values %>% ggplot() +
geom_bar(aes(x = reorder(key, desc(pct)),
y = pct, fill=isna), stat='identity', alpha=0.8) +
scale_x_discrete(limits = levels) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
coord_flip() + labs(title = "Percentage of missing values after dropping some common null value records",
x = 'Features', y = "% of missing values")
null_inrow_dropped.plot <- le_dropped %>%
mutate(id = row_number()) %>%
gather(-id, key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
ggplot(aes(key, id, fill = isna)) +
geom_raster(alpha=0.8) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
scale_x_discrete(limits = levels) +
labs(x = "Features", y = "Row Number", title = "Missing values in rows after dropping some common null value records") +
coord_flip()
options(repr.plot.width = 30, repr.plot.height = 60)
gridExtra::grid.arrange(null_percentage.plot, null_inrow.plot, ncol = 1)
gridExtra::grid.arrange(null_percentage_dropped.plot, null_inrow_dropped.plot, ncol = 1)
library(magrittr)
library(dplyr)
library(tidyr)
missing.values <- le %>%
gather(key = "key", value = "val") %>%
mutate(is.missing = is.na(val)) %>%
group_by(key, is.missing) %>%
summarise(num.missing = n()) %>%
filter(is.missing==T) %>%
select(-is.missing) %>%
arrange(desc(num.missing))
missing.values
le <- read.csv("dataset/LifeExpectancy.csv")
summary(le)
dim(le)
str(le)
# Create a new column Status.val to represent the Status column with number
le$Status.val <- ifelse(le$Status == "Developed",1,0)
# Create a new column as the scaled version of the GDP & Population,
#le$GDP_scaled = scale(le$GDP)
#le$Population_scaled = scale(le$Population)
# Remove the unreliable column
le <- subset(le,select=-c(percentage.expenditure))
library(magrittr)
library(dplyr)
library(tidyr)
le %>% group_by(Country) %>% summarise(COUNT = n())
library(magrittr)
library(dplyr)
library(tidyr)
missing.values <- le %>%
gather(key = "key", value = "val") %>%
mutate(is.missing = is.na(val)) %>%
group_by(key, is.missing) %>%
summarise(num.missing = n()) %>%
filter(is.missing==T) %>%
select(-is.missing) %>%
arrange(desc(num.missing))
missing.values
le %>% group_by(Country) %>% summarise(COUNT = n())
le_dropped %>% group_by(Country) %>% summarise(COUNT = n()) #12 country were removed after dropping some common null value (193-181)
#might need to consider not using this variable
le %>% group_by(Country) %>% summarise(COUNT = n())
le_dropped %>% group_by(Country) %>% summarise(COUNT = n()) #12 country were removed after dropping some common null value (193-181)
#might need to consider not using this variable
library(ggplot2)
#install.packages("tidyverse")
library(tidyverse)
le_dropped %>%
group_by(Year) %>%
summarise(Life.expectancy = mean(Life.expectancy)) %>%
ggplot(aes(x=Year,
y=Life.expectancy)) +
geom_line()
le_dropped %>%
group_by(Status) %>%
summarise(Life.expectancy = mean(Life.expectancy)) %>%
ggplot(aes(x=Status,
y=Life.expectancy,
fill=Status)) +
geom_bar(stat = "identity")+ scale_fill_manual(values=c('dodgerblue2', 'coral'))
knitr::opts_chunk$set(echo = TRUE)
plot(lmmod)
plot(lmmod)
knitr::opts_chunk$set(echo = TRUE)
le <- read.csv("dataset/LifeExpectancy.csv")
summary(le)
str(le)
# Create a new column Status.val to represent the Status column with number
le$Status.val <- ifelse(le$Status == "Developed",1,0)
# Create a new column as the scaled version of the GDP & Population,
#le$GDP_scaled = scale(le$GDP)
#le$Population_scaled = scale(le$Population)
# Remove the unreliable column
le <- subset(le,select=-c(percentage.expenditure))
library(magrittr)
library(dplyr)
library(tidyr)
le %>% group_by(Country) %>% summarise(COUNT = n())
library(magrittr)
library(dplyr)
library(tidyr)
missing.values <- le %>%
gather(key = "key", value = "val") %>%
mutate(is.missing = is.na(val)) %>%
group_by(key, is.missing) %>%
summarise(num.missing = n()) %>%
filter(is.missing==T) %>%
select(-is.missing) %>%
arrange(desc(num.missing))
library(ggplot2)
library(gridExtra)
missing.values <- le %>%
gather(key="key", value="val") %>%
mutate(isna=is.na(val)) %>%
group_by(key) %>%
mutate(total=n()) %>%
group_by(key,total,isna) %>%
summarise(num.isna=n()) %>%
mutate(pct=num.isna/total * 100)
levels <- (missing.values%>%filter(isna==T) %>% arrange(desc(pct)))$key
null_percentage.plot <- missing.values %>% ggplot() +
geom_bar(aes(x = reorder(key, desc(pct)),
y = pct, fill=isna), stat='identity', alpha=0.8) +
scale_x_discrete(limits = levels) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
coord_flip() + labs(title = "Percentage of missing values",
x = 'Features', y = "% of missing values")
null_inrow.plot <- le %>%
mutate(id = row_number()) %>%
gather(-id, key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
ggplot(aes(key, id, fill = isna)) +
geom_raster(alpha=0.8) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
scale_x_discrete(limits = levels) +
labs(x = "Features", y = "Row Number", title = "Missing values in rows") +
coord_flip()
library(dplyr)
#le_dropped <- le %>% filter_at(vars(Population_scaled,Population,GDP,GDP_scaled,Income.composition.of.resources,Schooling),any_vars(!is.na(.)))
le_dropped <- le %>% filter_at(vars(Population,GDP,Income.composition.of.resources,Schooling),any_vars(!is.na(.)))
missing.values <- le_dropped %>%
gather(key="key", value="val") %>%
mutate(isna=is.na(val)) %>%
group_by(key) %>%
mutate(total=n()) %>%
group_by(key,total,isna) %>%
summarise(num.isna=n()) %>%
mutate(pct=num.isna/total * 100)
#missing.values
levels <- (missing.values%>%filter(isna==T) %>% arrange(desc(pct)))$key
null_percentage_dropped.plot <- missing.values %>% ggplot() +
geom_bar(aes(x = reorder(key, desc(pct)),
y = pct, fill=isna), stat='identity', alpha=0.8) +
scale_x_discrete(limits = levels) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
coord_flip() + labs(title = "Percentage of missing values after dropping some common null value records",
x = 'Features', y = "% of missing values")
null_inrow_dropped.plot <- le_dropped %>%
mutate(id = row_number()) %>%
gather(-id, key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
ggplot(aes(key, id, fill = isna)) +
geom_raster(alpha=0.8) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
scale_x_discrete(limits = levels) +
labs(x = "Features", y = "Row Number", title = "Missing values in rows after dropping some common null value records") +
coord_flip()
options(repr.plot.width = 30, repr.plot.height = 30)
gridExtra::grid.arrange(null_percentage.plot, null_inrow.plot, ncol = 1)
gridExtra::grid.arrange(null_percentage_dropped.plot, null_inrow_dropped.plot, ncol = 1)
le %>% group_by(Country) %>% summarise(COUNT = n())
le_dropped %>% group_by(Country) %>% summarise(COUNT = n()) #12 country were removed after dropping some common null value (193-181)
#might need to consider not using this variable
for(i in 1:ncol(le_dropped)) {                                   # Replace NA in all columns
le_dropped[ , i][is.na(le_dropped[ , i])] <- mean(le_dropped[ , i], na.rm = TRUE)
}
library(ggplot2)
#install.packages("tidyverse")
library(tidyverse)
par(mfrow=c(1,2))
le_dropped %>%
group_by(Year) %>%
summarise(Life.expectancy = mean(Life.expectancy)) %>%
ggplot(aes(x=Year,
y=Life.expectancy)) +
geom_line()
le_dropped %>%
group_by(Status) %>%
summarise(Life.expectancy = mean(Life.expectancy)) %>%
ggplot(aes(x=Status,
y=Life.expectancy,
fill=Status)) +
geom_bar(stat = "identity")+ scale_fill_manual(values=c('dodgerblue2', 'coral'))
le_dropped.pivot <- pivot_longer(le_dropped,c(Adult.Mortality,under.five.deaths,infant.deaths),names_to='Mortality.Group',values_to='Mortality.Rate')
require(gridExtra)
le_dropped.pivot.area <- le_dropped.pivot %>%
group_by(Year,Mortality.Group) %>%
summarise(Mortality.Rate = mean(Mortality.Rate)) %>%
ggplot(aes(x=Year,
y=Mortality.Rate,
fill=Mortality.Group)) +
geom_area(position="stack",stat="identity")
le_dropped.pivot.line <- le_dropped.pivot %>%
group_by(Year,Mortality.Group) %>%
summarise(Mortality.Rate = mean(Mortality.Rate)) %>%
ggplot(aes(x=Year,
y=Mortality.Rate,
color=Mortality.Group)) +
geom_line()
grid.arrange(le_dropped.pivot.area,le_dropped.pivot.line, ncol=2)
head(le_dropped)
#df = subset(le_dropped, select = -c(Country,GDP,Population) )
df = subset(le_dropped, select = -c(Country) )
#head(df)
#library(Hmisc)
#library(GGally)
#ggpairs(df)
#df_hist <- df
#colnames(df_hist)[3]<-"LifeExp"
#hist.data.frame(df_hist[3])
#install.packages(GGally)
library(GGally)
ggcorr(df,palette = "RdBu", size=2,label=TRUE,label_size = 2,hjust = .95,layout.exp=2)
lmmod <- lm(Life.expectancy~., data = df)
summary(lmmod)
par(mfrow=c(1,2),heights=c(1,1,1,1))
plot(lmmod)
model.step.bic <- step(lmmod,k=log(nrow(df)))
summary(model.step.bic)
library(car)
vif(model.step.bic)
#removed one of infant.deaths or under.five.deaths
df1<-df[,c('Life.expectancy','Status','Adult.Mortality','infant.deaths','under.five.deaths',
'Hepatitis.B','BMI','Polio','Diphtheria',
'HIV.AIDS','thinness..1.19.years','Income.composition.of.resources','Schooling','GDP')]
df1$Status <- factor(df1$Status)
#removed 'under.five.deaths', due to vif - multi collinearity from BIC selection but it decreased model
#performance so should we retain it?
#head(df1)
library(mclust)
clus1 <- Mclust(df1)
summary(clus1)
lmmod2 <- lm(Life.expectancy~.,data=df1)
summary(lmmod2)
vif(lmmod2)
## Extra - add if there is page available
#str(le)
class(df$Country)
glm_model <- glm(Life.expectancy~., data = df, family = "gaussian")
bic_back <- step(glm_model, k=log(nrow(df)), direction="backward", trace=FALSE)
summary(bic_back)
summary(glm_model)
###############################################################################
###############PCA(suggest a simpler scoring system):##########################
###############################################################################
#head(df[,-3])
head(df[,c(-1,-3)])
df$Status <- as.numeric(as.factor(df$Status)) #Convert Non-Numeric Columns to Numeric for PCA
pca_model <- prcomp(df[,c(-1,-3)],scale.=TRUE)
summary(pca_model)
#Use Sceen Plot to decide how many PC to keep, But there seems to be a large value in our PC1 Standard Deviation so it isn't a clear indicator.
plot(pca_model, type="lines")
#Use Standard deviation instead to decide how many PC to keep, if it is below 1 we toss it out since it does not explain much info about our data.it is suggest us to keep 15 PC.
pca_model$rotation[,1:15]
###############################################################################
#########################################FA:(not working)###################################
###############################################################################
df2 = subset(le_dropped, select = -c(Country) )
head(df2)
#Need to eliminate non numeric variables before running factor analysis below
head(df)
#fa_model <- factanal(df2, factors = 13)
#Histogram & QQPlot
par(mfrow=c(1,2))
hist(df$Life.expectancy, col='steelblue', main='Life.expectancy_Histogram')
#not really a good "bell-shape"
qqnorm(df$Life.expectancy, main='Life.expectancy_QQplot')
#most of the data is not fall along a straight diagonal line
qqline(df$Life.expectancy)
#Both are indicating that our predict variable Y "df$Life.expectancy" is not normally distributed
#Kolmogorov-Smirnov Test
ks.test(df$Life.expectancy, 'pnorm')
#Finding: Since df$Life.expectancy p-value is less than .05, indicate that our y variable is not normally distributed!!!
library(np)
n <- names(df)
f <- as.formula(paste("df$Life.expectancy ~", paste(n[!n %in% "Life.expectancy"], collapse = " + ")))
model_np <- npregbw(Life.expectancy ~ Adult.Mortality + infant.deaths + Hepatitis.B + BMI + under.five.deaths + Polio + Diphtheria + HIV.AIDS + GDP + thinness..1.19.years + Income.composition.of.resources + Schooling, data = df, regtype="ll", bwmethod = "cv.aic")
