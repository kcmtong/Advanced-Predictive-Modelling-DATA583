#percentage.plot
row.plot <- le %>%
mutate(id = row_number()) %>%
gather(-id, key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
ggplot(aes(key, id, fill = isna)) +
geom_raster(alpha=0.8) +
scale_fill_manual(name = "",
values = c('steelblue', 'tomato3'),
labels = c("Present", "Missing")) +
scale_x_discrete(limits = levels) +
labs(x = "Variable",
y = "Row Number", title = "Missing values in rows") +
coord_flip()
#row.plot
#grid.arrange(percentage.plot, row.plot, ncol = 2)
require(gridExtra)
grid.arrange(percentage.plot,row.plot,cols=2)
missing.values <- le %>%
gather(key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
group_by(key) %>%
mutate(total = n()) %>%
group_by(key, total, isna) %>%
summarise(num.isna = n()) %>%
mutate(pct = num.isna / total * 100)
levels <- (missing.values  %>% filter(isna == T) %>% arrange(desc(pct)))$key
percentage.plot <- missing.values %>%
ggplot() +
geom_bar(aes(x = reorder(key, desc(pct)),
y = pct, fill=isna),
stat = 'identity', alpha=0.8) +
scale_x_discrete(limits = levels) +
scale_fill_manual(name = "",
values = c('steelblue', 'tomato3'), labels = c("Present", "Missing")) +
coord_flip() +
labs(title = "Percentage of missing values", x =
'Variable', y = "% of missing values")
#percentage.plot
row.plot <- le %>%
mutate(id = row_number()) %>%
gather(-id, key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
ggplot(aes(key, id, fill = isna)) +
geom_raster(alpha=0.8) +
scale_fill_manual(name = "",
values = c('steelblue', 'tomato3'),
labels = c("Present", "Missing")) +
scale_x_discrete(limits = levels) +
labs(x = "Variable",
y = "Row Number", title = "Missing values in rows") +
coord_flip()
#row.plot
#grid.arrange(percentage.plot, row.plot, ncol = 2)
require(gridExtra)
multiplot(percentage.plot,row.plot,cols=2)
missing.values <- le %>%
gather(key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
group_by(key) %>%
mutate(total = n()) %>%
group_by(key, total, isna) %>%
summarise(num.isna = n()) %>%
mutate(pct = num.isna / total * 100)
levels <- (missing.values  %>% filter(isna == T) %>% arrange(desc(pct)))$key
percentage.plot <- missing.values %>%
ggplot() +
geom_bar(aes(x = reorder(key, desc(pct)),
y = pct, fill=isna),
stat = 'identity', alpha=0.8) +
scale_x_discrete(limits = levels) +
scale_fill_manual(name = "",
values = c('steelblue', 'tomato3'), labels = c("Present", "Missing")) +
coord_flip() +
labs(title = "Percentage of missing values", x =
'Variable', y = "% of missing values")
#percentage.plot
row.plot <- le %>%
mutate(id = row_number()) %>%
gather(-id, key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
ggplot(aes(key, id, fill = isna)) +
geom_raster(alpha=0.8) +
scale_fill_manual(name = "",
values = c('steelblue', 'tomato3'),
labels = c("Present", "Missing")) +
scale_x_discrete(limits = levels) +
labs(x = "Variable",
y = "Row Number", title = "Missing values in rows") +
coord_flip()
#row.plot
grid.arrange(percentage.plot, row.plot, ncol = 2)
missing.values <- le %>%
gather(key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
group_by(key) %>%
mutate(total = n()) %>%
group_by(key, total, isna) %>%
summarise(num.isna = n()) %>%
mutate(pct = num.isna / total * 100)
levels <- (missing.values  %>% filter(isna == T) %>% arrange(desc(pct)))$key
percentage.plot <- missing.values %>%
ggplot() +
geom_bar(aes(x = reorder(key, desc(pct)),
y = pct, fill=isna),
stat = 'identity', alpha=0.8) +
scale_x_discrete(limits = levels) +
scale_fill_manual(name = "",
values = c('steelblue', 'tomato3'), labels = c("Present", "Missing")) +
coord_flip() +
labs(title = "Percentage of missing values", x =
'Variable', y = "% of missing values")
#percentage.plot
row.plot <- le %>%
mutate(id = row_number()) %>%
gather(-id, key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
ggplot(aes(key, id, fill = isna)) +
geom_raster(alpha=0.8) +
scale_fill_manual(name = "",
values = c('steelblue', 'tomato3'),
labels = c("Present", "Missing")) +
scale_x_discrete(limits = levels) +
labs(x = "Variable",
y = "Row Number", title = "Missing values in rows") +
coord_flip()
#row.plot
#grid.arrange(percentage.plot, row.plot, ncol = 2)
install.packages(gridExtra)
library(gridExtra)
missing.values <- le %>%
gather(key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
group_by(key) %>%
mutate(total = n()) %>%
group_by(key, total, isna) %>%
summarise(num.isna = n()) %>%
mutate(pct = num.isna / total * 100)
levels <- (missing.values  %>% filter(isna == T) %>% arrange(desc(pct)))$key
percentage.plot <- missing.values %>%
ggplot() +
geom_bar(aes(x = reorder(key, desc(pct)),
y = pct, fill=isna),
stat = 'identity', alpha=0.8) +
scale_x_discrete(limits = levels) +
scale_fill_manual(name = "",
values = c('steelblue', 'tomato3'), labels = c("Present", "Missing")) +
coord_flip() +
labs(title = "Percentage of missing values", x =
'Variable', y = "% of missing values")
#percentage.plot
row.plot <- le %>%
mutate(id = row_number()) %>%
gather(-id, key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
ggplot(aes(key, id, fill = isna)) +
geom_raster(alpha=0.8) +
scale_fill_manual(name = "",
values = c('steelblue', 'tomato3'),
labels = c("Present", "Missing")) +
scale_x_discrete(limits = levels) +
labs(x = "Variable",
y = "Row Number", title = "Missing values in rows") +
coord_flip()
#row.plot
#grid.arrange(percentage.plot, row.plot, ncol = 2)
#install.packages(gridExtra)
library(gridExtra)
missing.values <- le %>%
gather(key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
group_by(key) %>%
mutate(total = n()) %>%
group_by(key, total, isna) %>%
summarise(num.isna = n()) %>%
mutate(pct = num.isna / total * 100)
levels <- (missing.values  %>% filter(isna == T) %>% arrange(desc(pct)))$key
percentage.plot <- missing.values %>%
ggplot() +
geom_bar(aes(x = reorder(key, desc(pct)),
y = pct, fill=isna),
stat = 'identity', alpha=0.8) +
scale_x_discrete(limits = levels) +
scale_fill_manual(name = "",
values = c('steelblue', 'tomato3'), labels = c("Present", "Missing")) +
coord_flip() +
labs(title = "Percentage of missing values", x =
'Variable', y = "% of missing values")
#percentage.plot
row.plot <- le %>%
mutate(id = row_number()) %>%
gather(-id, key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
ggplot(aes(key, id, fill = isna)) +
geom_raster(alpha=0.8) +
scale_fill_manual(name = "",
values = c('steelblue', 'tomato3'),
labels = c("Present", "Missing")) +
scale_x_discrete(limits = levels) +
labs(x = "Variable",
y = "Row Number", title = "Missing values in rows") +
coord_flip()
#row.plot
#grid.arrange(percentage.plot, row.plot, ncol = 2)
#install.packages(gridExtra)
#library(gridExtra)
grid.arrange(percentage.plot,row.plot,cols=2)
library(gridExtra)
install.packages("gridExtra")
library(gridExtra)
library(gridExtra)
#grid.arrange(percentage.plot, row.plot, ncol = 2)
#install.packages(gridExtra)
#library(gridExtra)
grid.arrange(percentage.plot,row.plot,cols=2)
install.packages("gridExtra")
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
library(dplyr)
library(tidyr)
missing.values <- le %>%
gather(key = "key", value = "val") %>%
mutate(is.missing = is.na(val)) %>%
group_by(key, is.missing) %>%
summarise(num.missing = n()) %>%
filter(is.missing==T) %>%
select(-is.missing) %>%
arrange(desc(num.missing))
missing.values
library(magrittr)
library(dplyr)
library(tidyr)
missing.values <- le %>%
gather(key = "key", value = "val") %>%
mutate(is.missing = is.na(val)) %>%
group_by(key, is.missing) %>%
summarise(num.missing = n()) %>%
filter(is.missing==T) %>%
select(-is.missing) %>%
arrange(desc(num.missing))
missing.values
library(ggplot2)
library(gridExtra)
missing.values <- le %>%
gather(key="key", value="val") %>%
mutate(isna=is.na(val)) %>%
group_by(key) %>%
mutate(total=n()) %>%
group_by(key,total,isna) %>%
summarise(num.isna=n()) %>%
mutate(pct=num.isna/total * 100)
levels <- (missing.values%>%filter(isna==T) %>% arrange(desc(pct)))$key
null_percentage.plot <- missing.values %>% ggplot() +
geom_bar(aes(x = reorder(key, desc(pct)),
y = pct, fill=isna), stat='identity', alpha=0.8) +
scale_x_discrete(limits = levels) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
coord_flip() + labs(title = "Percentage of missing values",
x = 'Features', y = "% of missing values")
null_inrow.plot <- le %>%
mutate(id = row_number()) %>%
gather(-id, key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
ggplot(aes(key, id, fill = isna)) +
geom_raster(alpha=0.8) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
scale_x_discrete(limits = levels) +
labs(x = "Features", y = "Row Number", title = "Missing values in rows") +
coord_flip()
library(dplyr)
#le_dropped <- le %>% filter_at(vars(Population_scaled,Population,GDP,GDP_scaled,Income.composition.of.resources,Schooling),any_vars(!is.na(.)))
le_dropped <- le %>% filter_at(vars(Population,GDP,Income.composition.of.resources,Schooling),any_vars(!is.na(.)))
missing.values <- le_dropped %>%
gather(key="key", value="val") %>%
mutate(isna=is.na(val)) %>%
group_by(key) %>%
mutate(total=n()) %>%
group_by(key,total,isna) %>%
summarise(num.isna=n()) %>%
mutate(pct=num.isna/total * 100)
missing.values
levels <- (missing.values%>%filter(isna==T) %>% arrange(desc(pct)))$key
null_percentage_dropped.plot <- missing.values %>% ggplot() +
geom_bar(aes(x = reorder(key, desc(pct)),
y = pct, fill=isna), stat='identity', alpha=0.8) +
scale_x_discrete(limits = levels) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
coord_flip() + labs(title = "Percentage of missing values after dropping some common null value records",
x = 'Features', y = "% of missing values")
null_inrow_dropped.plot <- le_dropped %>%
mutate(id = row_number()) %>%
gather(-id, key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
ggplot(aes(key, id, fill = isna)) +
geom_raster(alpha=0.8) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
scale_x_discrete(limits = levels) +
labs(x = "Features", y = "Row Number", title = "Missing values in rows after dropping some common null value records") +
coord_flip()
options(repr.plot.width = 30, repr.plot.height = 60)
gridExtra::grid.arrange(null_percentage.plot, null_inrow.plot, ncol = 1)
gridExtra::grid.arrange(null_percentage_dropped.plot, null_inrow_dropped.plot, ncol = 1)
library(ggplot2)
library(gridExtra)
missing.values <- le %>%
gather(key="key", value="val") %>%
mutate(isna=is.na(val)) %>%
group_by(key) %>%
mutate(total=n()) %>%
group_by(key,total,isna) %>%
summarise(num.isna=n()) %>%
mutate(pct=num.isna/total * 100)
levels <- (missing.values%>%filter(isna==T) %>% arrange(desc(pct)))$key
null_percentage.plot <- missing.values %>% ggplot() +
geom_bar(aes(x = reorder(key, desc(pct)),
y = pct, fill=isna), stat='identity', alpha=0.8) +
scale_x_discrete(limits = levels) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
coord_flip() + labs(title = "Percentage of missing values",
x = 'Features', y = "% of missing values")
null_inrow.plot <- le %>%
mutate(id = row_number()) %>%
gather(-id, key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
ggplot(aes(key, id, fill = isna)) +
geom_raster(alpha=0.8) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
scale_x_discrete(limits = levels) +
labs(x = "Features", y = "Row Number", title = "Missing values in rows") +
coord_flip()
library(dplyr)
#le_dropped <- le %>% filter_at(vars(Population_scaled,Population,GDP,GDP_scaled,Income.composition.of.resources,Schooling),any_vars(!is.na(.)))
le_dropped <- le %>% filter_at(vars(Population,GDP,Income.composition.of.resources,Schooling),any_vars(!is.na(.)))
missing.values <- le_dropped %>%
gather(key="key", value="val") %>%
mutate(isna=is.na(val)) %>%
group_by(key) %>%
mutate(total=n()) %>%
group_by(key,total,isna) %>%
summarise(num.isna=n()) %>%
mutate(pct=num.isna/total * 100)
missing.values
levels <- (missing.values%>%filter(isna==T) %>% arrange(desc(pct)))$key
null_percentage_dropped.plot <- missing.values %>% ggplot() +
geom_bar(aes(x = reorder(key, desc(pct)),
y = pct, fill=isna), stat='identity', alpha=0.8) +
scale_x_discrete(limits = levels) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
coord_flip() + labs(title = "Percentage of missing values after dropping some common null value records",
x = 'Features', y = "% of missing values")
null_inrow_dropped.plot <- le_dropped %>%
mutate(id = row_number()) %>%
gather(-id, key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
ggplot(aes(key, id, fill = isna)) +
geom_raster(alpha=0.8) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
scale_x_discrete(limits = levels) +
labs(x = "Features", y = "Row Number", title = "Missing values in rows after dropping some common null value records") +
coord_flip()
options(repr.plot.width = 30, repr.plot.height = 60)
gridExtra::grid.arrange(null_percentage.plot, null_inrow.plot, ncol = 1)
gridExtra::grid.arrange(null_percentage_dropped.plot, null_inrow_dropped.plot, ncol = 1)
library(ggplot2)
library(gridExtra)
missing.values <- le %>%
gather(key="key", value="val") %>%
mutate(isna=is.na(val)) %>%
group_by(key) %>%
mutate(total=n()) %>%
group_by(key,total,isna) %>%
summarise(num.isna=n()) %>%
mutate(pct=num.isna/total * 100)
levels <- (missing.values%>%filter(isna==T) %>% arrange(desc(pct)))$key
null_percentage.plot <- missing.values %>% ggplot() +
geom_bar(aes(x = reorder(key, desc(pct)),
y = pct, fill=isna), stat='identity', alpha=0.8) +
scale_x_discrete(limits = levels) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
coord_flip() + labs(title = "Percentage of missing values",
x = 'Features', y = "% of missing values")
null_inrow.plot <- le %>%
mutate(id = row_number()) %>%
gather(-id, key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
ggplot(aes(key, id, fill = isna)) +
geom_raster(alpha=0.8) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
scale_x_discrete(limits = levels) +
labs(x = "Features", y = "Row Number", title = "Missing values in rows") +
coord_flip()
library(dplyr)
#le_dropped <- le %>% filter_at(vars(Population_scaled,Population,GDP,GDP_scaled,Income.composition.of.resources,Schooling),any_vars(!is.na(.)))
le_dropped <- le %>% filter_at(vars(Population,GDP,Income.composition.of.resources,Schooling),any_vars(!is.na(.)))
missing.values <- le_dropped %>%
gather(key="key", value="val") %>%
mutate(isna=is.na(val)) %>%
group_by(key) %>%
mutate(total=n()) %>%
group_by(key,total,isna) %>%
summarise(num.isna=n()) %>%
mutate(pct=num.isna/total * 100)
missing.values
levels <- (missing.values%>%filter(isna==T) %>% arrange(desc(pct)))$key
null_percentage_dropped.plot <- missing.values %>% ggplot() +
geom_bar(aes(x = reorder(key, desc(pct)),
y = pct, fill=isna), stat='identity', alpha=0.8) +
scale_x_discrete(limits = levels) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
coord_flip() + labs(title = "Percentage of missing values after dropping some common null value records",
x = 'Features', y = "% of missing values")
null_inrow_dropped.plot <- le_dropped %>%
mutate(id = row_number()) %>%
gather(-id, key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
ggplot(aes(key, id, fill = isna)) +
geom_raster(alpha=0.8) +
scale_fill_manual(name = "",
values = c('dodgerblue2', 'coral'),
labels = c("Present", "Missing")) +
scale_x_discrete(limits = levels) +
labs(x = "Features", y = "Row Number", title = "Missing values in rows after dropping some common null value records") +
coord_flip()
options(repr.plot.width = 30, repr.plot.height = 60)
gridExtra::grid.arrange(null_percentage.plot, null_inrow.plot, ncol = 1)
gridExtra::grid.arrange(null_percentage_dropped.plot, null_inrow_dropped.plot, ncol = 1)
library(magrittr)
library(dplyr)
library(tidyr)
missing.values <- le %>%
gather(key = "key", value = "val") %>%
mutate(is.missing = is.na(val)) %>%
group_by(key, is.missing) %>%
summarise(num.missing = n()) %>%
filter(is.missing==T) %>%
select(-is.missing) %>%
arrange(desc(num.missing))
missing.values
le <- read.csv("dataset/LifeExpectancy.csv")
summary(le)
dim(le)
str(le)
# Create a new column Status.val to represent the Status column with number
le$Status.val <- ifelse(le$Status == "Developed",1,0)
# Create a new column as the scaled version of the GDP & Population,
#le$GDP_scaled = scale(le$GDP)
#le$Population_scaled = scale(le$Population)
# Remove the unreliable column
le <- subset(le,select=-c(percentage.expenditure))
library(magrittr)
library(dplyr)
library(tidyr)
le %>% group_by(Country) %>% summarise(COUNT = n())
library(magrittr)
library(dplyr)
library(tidyr)
missing.values <- le %>%
gather(key = "key", value = "val") %>%
mutate(is.missing = is.na(val)) %>%
group_by(key, is.missing) %>%
summarise(num.missing = n()) %>%
filter(is.missing==T) %>%
select(-is.missing) %>%
arrange(desc(num.missing))
missing.values
le %>% group_by(Country) %>% summarise(COUNT = n())
le_dropped %>% group_by(Country) %>% summarise(COUNT = n()) #12 country were removed after dropping some common null value (193-181)
#might need to consider not using this variable
le %>% group_by(Country) %>% summarise(COUNT = n())
le_dropped %>% group_by(Country) %>% summarise(COUNT = n()) #12 country were removed after dropping some common null value (193-181)
#might need to consider not using this variable
library(ggplot2)
#install.packages("tidyverse")
library(tidyverse)
le_dropped %>%
group_by(Year) %>%
summarise(Life.expectancy = mean(Life.expectancy)) %>%
ggplot(aes(x=Year,
y=Life.expectancy)) +
geom_line()
le_dropped %>%
group_by(Status) %>%
summarise(Life.expectancy = mean(Life.expectancy)) %>%
ggplot(aes(x=Status,
y=Life.expectancy,
fill=Status)) +
geom_bar(stat = "identity")+ scale_fill_manual(values=c('dodgerblue2', 'coral'))
knitr::opts_chunk$set(echo = TRUE)
plot(lmmod)
plot(lmmod)
